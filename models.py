# Generated by https://quicktype.io
#
# To change quicktype's target language, run command:
#
#   "Set quicktype target language"

from datetime import datetime
from typing import List

from pydantic import BaseModel

class DatumAttributes:
    title: str
    body: str
    created: datetime
    updated: datetime

    def __init__(self, title: str, body: str, created: datetime, updated: datetime) -> None:
        self.title = title
        self.body = body
        self.created = created
        self.updated = updated


class Data:
    id: int
    type: str

    def __init__(self, id: int, type: str) -> None:
        self.id = id
        self.type = type


class Author:
    data: Data

    def __init__(self, data: Data) -> None:
        self.data = data


class Relationships:
    author: Author

    def __init__(self, author: Author) -> None:
        self.author = author


class Datum:
    type: str
    id: int
    attributes: DatumAttributes
    relationships: Relationships

    def __init__(self, type: str, id: int, attributes: DatumAttributes, relationships: Relationships) -> None:
        self.type = type
        self.id = id
        self.attributes = attributes
        self.relationships = relationships


class IncludedAttributes:
    name: str
    age: int
    gender: str

    def __init__(self, name: str, age: int, gender: str) -> None:
        self.name = name
        self.age = age
        self.gender = gender


class Included:
    type: str
    id: int
    attributes: IncludedAttributes

    def __init__(self, type: str, id: int, attributes: IncludedAttributes) -> None:
        self.type = type
        self.id = id
        self.attributes = attributes


class File:
    data: List[Datum]
    included: List[Included]

    def __init__(self, data: List[Datum], included: List[Included]) -> None:
        self.data = data
        self.included = included
